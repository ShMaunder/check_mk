#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_cmciii_lcp_waterflow(info):
    if info:
        return [(None, None)]

def check_cmciii_lcp_waterflow(item, params, info):
    if info[0]:
        info_text = "%s Status: %s Flow: %s, MinFlow: %s, MaxFLow: %s" % \
                (info[0][0], info[0][4], info[0][1], info[0][3], info[0][2])

        perfdata = [ ("flow", re.sub(" ", "", info[0][1]) , 0, re.sub(' .*$', '', info[0][3])+":"+re.sub(' .*$', '', info[0][2]), 0 ) ]

        if info[0][4].lower() == "ok":
            state = 0
        else:
            state = 2

        return (state, info_text, perfdata)

    return (3, "no SNMP data found")

check_info['cmciii_lcp_waterflow'] = {
    "check_function"      : check_cmciii_lcp_waterflow,
    "inventory_function"  : inventory_cmciii_lcp_waterflow,
    "has_perfdata"        : True,
    "service_description" : "LCP Fanunit WATER FLOW",
    "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.1.0").startswith("Rittal LCP"),
    "snmp_info"           : ( '.1.3.6.1.4.1.2606.7.4.2.2.1.10.2', range(82, 87)),
}
