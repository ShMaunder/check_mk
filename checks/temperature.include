#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def fahrenheit_to_celsius(tempf):
    return (float(tempf) - 32) * (5.0 / 9.0)


# Checks Celsius temperature against crit/warn levels defined in params. temp must
# be int or float

def check_temperature(temp, params):

    def tostring(temp):
        if type(temp) == int:
            return "%d" % temp
        else:
            return "%.1f" % temp

    warn, crit = params
    perfdata = [ ("temp", temp, warn, crit) ]
    infotext  = "Temperature: %s °C" % tostring(temp)
    levelstext = " (warn/crit at %s/%s °C)" % (tostring(warn), tostring(crit))

    if crit != None and temp >= crit:
        status = 2
        infotext += levelstext
    elif warn != None and temp >= warn:
        status = 1
        infotext += levelstext
    else:
        status = 0

    return status, infotext, perfdata
