#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from plugin:
# <<<citrix_licenses>>>
# PVS_STD_CCS 80 0
# PVS_STD_CCS 22 0
# CEHV_ENT_CCS 22 0
# MPS_ENT_CCU 2160 1636
# MPS_ENT_CCU 22 22
# XDT_ENT_UD 22 18
# XDS_ENT_CCS 22 0
# PVSD_STD_CCS 42 0

def inventory_citrix_licenses(info):
    license_types = set([])
    for license_type, have, used in info:
        license_types.add(license_type)
    return [ (lt, None) for lt in license_types ]

def check_citrix_licenses(item, params, info):
    have = 0
    used = 0
    for license_type, h, u in info:
        if item == license_type:
            have += int(h)
            used += int(u)
    if not have:
        return 3, "No licenses of that type found"

    if params == None:
        warn = have
        crit = have
    elif type(params[0]) == int:
        warn = max(0, have - params[0])
        crit = max(0, have - params[1])
    else:
        warn = have * (1 - params[0]/100)
        crit = have * (1 - params[1]/100)

    perfdata = [ ( "licenses", used, warn, crit, 0, have )]
    if used <= have:
        infotext = "used %d out of %d licenses" % (used, have)
    else:
        infotext = "used %d licenses, but you have only %d" % (used, have)

    if used >= have:
        status = 2
    elif used >= warn:
        status = 1
    else:
        status = 0

    if status:
        infotext += " (levels at %d/%d)" % (warn, crit)

    return status, infotext, perfdata

check_info["citrix_licenses"] = {
    'check_function'       : check_citrix_licenses,
    'inventory_function'   : inventory_citrix_licenses,
    'service_description'  : 'Citrix Licenses %s',
    'has_perfdata'         : True,
    'group'                : "citrix_licenses",
}
