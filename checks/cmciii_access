#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_cmciii_access(info):
    inventory = []
    for line in info[0]:
        if line[0] == "Door" or line[0] == "ACCESS":
            id, num = line[1].split(".")
            if num == "1":
                item = line[0] +" " + id
                inventory.append( (item , None ))
    return inventory

def check_cmciii_access(item, params, info):
    itemtype, itemnum = item.split(" ")
    for line in info[0]:
        id, num = line[1].split(".")
        if itemnum == id:
            if (itemtype == "Door" and num == "5") or (itemtype == "ACCESS" and num == "4"):
                infotext = "-".join(info[1][int(id)-1])
                infotext += ": " + line[0]
                state = 2
                if line[0] == "Closed":
                    state = 0
                return (state, infotext )

    return (3, "Item not found in SNMP data")


check_info['cmciii_access'] = {
    "check_function"      : check_cmciii_access,
    "inventory_function"  : inventory_cmciii_access,
    "has_perfdata"        : False,
    "service_description" : "%s",
    "snmp_scan_function"  : lambda oid: "Rittal CMC III PU" in oid(".1.3.6.1.2.1.1.1.0").replace("-", " "),
    "snmp_info"           : [
                                [".1.3.6.1.4.1.2606.7.4.2.2.1", [ "10", OID_END ] ],
                                [".1.3.6.1.4.1.2606.7.4.1.2.1", ( "2", "3" )  ]
                            ]
}

